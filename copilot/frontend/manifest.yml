# The manifest for the "webapp" service.
# Read the full specification for the "Load Balanced Web Service" type at:
#  https://aws.github.io/copilot-cli/docs/manifest/lb-web-service/

# Your service name will be used in naming your resources like log groups, ECS services, etc.
name: frontend
type: Load Balanced Web Service

region: us-east-1

# Distribute traffic to your service.
http:
  # Requests to this path will be forwarded to your service.
  # To match all requests you can use the "/" path.
  path: '/'
  # You can specify a custom health check path. The default is "/".
  healthcheck:
    path: '/healthz'
    healthy_threshold: 2
    unhealthy_threshold: 2

# Configuration for your containers and service.
image:
  # Docker build arguments. For additional overrides: https://aws.github.io/copilot-cli/docs/manifest/lb-web-service/#image-build
  build: Dockerfile
  # Port exposed through your container to route traffic to it.
  port: 3000

cpu: 256       # Number of CPU units for the task.
memory: 512    # Amount of memory in MiB used by the task.
platform: linux/x86_64  # See https://aws.github.io/copilot-cli/docs/manifest/lb-web-service/#platform
count: 1       # Number of tasks that should be running in your service.
exec: true     # Enable running commands in your container.
network:
  connect: true # Enable Service Connect for intra-environment traffic between services.

# storage:
  # readonly_fs: true       # Limit to read-only access to mounted root filesystems.

# You can override any of the values defined above by environment.
environments:
  stag:
    http:
      alias:
        - name: 'stag.rachaelwilliams.fit'
          hosted_zone: Z0902220170DUSA4HJFLM
    variables:
      NODE_ENV: 'stag'
  prod:
    http:
      alias:
        - name: 'rachaelwilliams.fit'
          hosted_zone: Z0902220170DUSA4HJFLM
        - name: 'www.rachaelwilliams.fit'
          hosted_zone: Z0902220170DUSA4HJFLM
    variables:
      NODE_ENV: 'prod'

#    count: 2               # Number of tasks to run for the "test" environment.
#    deployment:            # The deployment strategy for the "test" environment.
#       rolling: 'recreate' # Stops existing tasks before new ones are started for faster deployments.